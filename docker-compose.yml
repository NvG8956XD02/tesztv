version: "3"
services:
  web:
    container_name: web_TesztV
    build: 
      context: .
    image: nvg8956xd02/base_laravel
    env_file:
      - ./src/.env
    volumes:
      - ./src:/var/www/html
    ports:
      - 80:80
      - 5173:5173
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    command: "php artisan serve --host=0.0.0.0 --port=80"
    networks:
      - laravel
  
  mysql_db:
    image: mysql:5.7.41-debian
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
      ##MYSQL_USER: '${DB_USERNAME}'
      ##MYSQL_PASSWORD: '${DB_PASSWORD}'
      ##MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: foodkrokodile
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      TZ: Europe/Budapest
    ports:
      - 3306:3306
    networks:
      - laravel
    #volumes:
    #  - ./sql:/docker-entrypoint-initdb.d

  phpmyadmin:
    image: phpmyadmin:latest
    restart: unless-stopped
    ports:
      - 8081:80
    environment:
      PMA_HOST: mysql_db
      PMA_PORT: 3306
      TZ: Europe/Budapest
    links:
      - mysql_db:mysql_db
    networks:
      - laravel

  composer:
    image: composer:latest
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel

  npm:
    image: node:latest
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql_db
    entrypoint: ['/var/www/html/artisan']
    networks:
      - laravel

networks:
  laravel:
    driver: bridge
volumes:
  src:
    driver: local